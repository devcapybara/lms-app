{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor untuk menambahkan token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor untuk handle error\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: data => api.post('/auth/register', data),\n  login: data => api.post('/auth/login', data),\n  logout: () => api.post('/auth/logout'),\n  getMe: () => api.get('/auth/me')\n};\n\n// User API\nexport const userAPI = {\n  getProfile: () => api.get('/auth/me'),\n  updateProfile: data => api.put('/users/profile', data),\n  changePassword: data => api.put('/users/change-password', data),\n  getEnrolledCourses: () => api.get('/users/enrolled-courses'),\n  getCreatedCourses: () => api.get('/users/created-courses')\n};\n\n// Course API\nexport const courseAPI = {\n  getAll: params => api.get('/courses', {\n    params\n  }),\n  getById: id => api.get(`/courses/${id}`),\n  create: data => {\n    if (data instanceof FormData) {\n      return axios.post(`${API_BASE_URL}/courses`, data, {\n        headers: {\n          // Jangan set Content-Type, browser akan otomatis\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      });\n    } else {\n      return api.post('/courses', data);\n    }\n  },\n  update: (id, data) => api.put(`/courses/${id}`, data),\n  delete: id => api.delete(`/courses/${id}`),\n  enroll: id => api.post(`/courses/${id}/enroll`),\n  unenroll: id => api.post(`/courses/${id}/unenroll`),\n  rate: (id, rating) => api.post(`/courses/${id}/rate`, {\n    rating\n  })\n};\n\n// Lesson API\nexport const lessonAPI = {\n  getByCourse: courseId => api.get(`/lessons/course/${courseId}`),\n  getById: id => api.get(`/lessons/${id}`),\n  create: data => api.post('/lessons', data),\n  update: (id, data) => api.put(`/lessons/${id}`, data),\n  delete: id => api.delete(`/lessons/${id}`),\n  complete: id => api.post(`/lessons/${id}/complete`),\n  submitQuiz: (id, answers) => api.post(`/lessons/${id}/quiz`, {\n    answers\n  }),\n  getProgress: id => api.get(`/lessons/${id}/progress`)\n};\n\n// Assessment API\nexport const assessmentAPI = {\n  getByCourse: courseId => api.get(`/assessments/course/${courseId}`),\n  getById: id => api.get(`/assessments/${id}`),\n  create: data => api.post('/assessments', data),\n  update: (id, data) => api.put(`/assessments/${id}`, data),\n  delete: id => api.delete(`/assessments/${id}`),\n  submit: (id, data) => api.post(`/assessments/${id}/submit`, data),\n  getAttempts: id => api.get(`/assessments/${id}/attempts`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","data","post","login","logout","getMe","get","userAPI","getProfile","updateProfile","put","changePassword","getEnrolledCourses","getCreatedCourses","courseAPI","getAll","params","getById","id","FormData","update","delete","enroll","unenroll","rate","rating","lessonAPI","getByCourse","courseId","complete","submitQuiz","answers","getProgress","assessmentAPI","submit","getAttempts"],"sources":["D:/lms-app/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor untuk menambahkan token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor untuk handle error\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (data) => api.post('/auth/register', data),\r\n  login: (data) => api.post('/auth/login', data),\r\n  logout: () => api.post('/auth/logout'),\r\n  getMe: () => api.get('/auth/me'),\r\n};\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getProfile: () => api.get('/auth/me'),\r\n  updateProfile: (data) => api.put('/users/profile', data),\r\n  changePassword: (data) => api.put('/users/change-password', data),\r\n  getEnrolledCourses: () => api.get('/users/enrolled-courses'),\r\n  getCreatedCourses: () => api.get('/users/created-courses'),\r\n};\r\n\r\n// Course API\r\nexport const courseAPI = {\r\n  getAll: (params) => api.get('/courses', { params }),\r\n  getById: (id) => api.get(`/courses/${id}`),\r\n  create: (data) => {\r\n    if (data instanceof FormData) {\r\n      return axios.post(`${API_BASE_URL}/courses`, data, {\r\n        headers: {\r\n          // Jangan set Content-Type, browser akan otomatis\r\n          Authorization: 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n      });\r\n    } else {\r\n      return api.post('/courses', data);\r\n    }\r\n  },\r\n  update: (id, data) => api.put(`/courses/${id}`, data),\r\n  delete: (id) => api.delete(`/courses/${id}`),\r\n  enroll: (id) => api.post(`/courses/${id}/enroll`),\r\n  unenroll: (id) => api.post(`/courses/${id}/unenroll`),\r\n  rate: (id, rating) => api.post(`/courses/${id}/rate`, { rating }),\r\n};\r\n\r\n// Lesson API\r\nexport const lessonAPI = {\r\n  getByCourse: (courseId) => api.get(`/lessons/course/${courseId}`),\r\n  getById: (id) => api.get(`/lessons/${id}`),\r\n  create: (data) => api.post('/lessons', data),\r\n  update: (id, data) => api.put(`/lessons/${id}`, data),\r\n  delete: (id) => api.delete(`/lessons/${id}`),\r\n  complete: (id) => api.post(`/lessons/${id}/complete`),\r\n  submitQuiz: (id, answers) => api.post(`/lessons/${id}/quiz`, { answers }),\r\n  getProgress: (id) => api.get(`/lessons/${id}/progress`),\r\n};\r\n\r\n// Assessment API\r\nexport const assessmentAPI = {\r\n  getByCourse: (courseId) => api.get(`/assessments/course/${courseId}`),\r\n  getById: (id) => api.get(`/assessments/${id}`),\r\n  create: (data) => api.post('/assessments', data),\r\n  update: (id, data) => api.put(`/assessments/${id}`, data),\r\n  delete: (id) => api.delete(`/assessments/${id}`),\r\n  submit: (id, data) => api.post(`/assessments/${id}/submit`, data),\r\n  getAttempts: (id) => api.get(`/assessments/${id}/attempts`),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}